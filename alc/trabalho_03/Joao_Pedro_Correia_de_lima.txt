/*
 * João Pedro Correia de Lima
 * RA: 1430482313040
*/

/*
 * 23. Ler dois conjuntos de números reais, armazenando-os em vetores e calcular o produto
 * escalar entre eles. Os conjuntos têm 5 elementos cada. Imprimir os dois conjuntos e o
 * produto escalar, sendo que o produto escalar  ́e dado por: x1 ∗ y1 + x2 ∗ y2 + ... + xn ∗ yn.
*/

import java.util.Scanner;

public class DotProduct{
	public static void main(String[] args){
		Scanner	scanner = new Scanner(System.in);
		double	x[] = new double[5], y[] = new double[5];
		double	sum = 0;
		String	strX, strY;

		System.out.println("Digite os valores na seguinte posição:");
		for (int i = 0; i < 5; i++) {
			System.out.print("x[" + (i+1) + "] = ");
			x[i] = scanner.nextDouble();
			System.out.print("y[" + (i+1) + "] = ");
			y[i] = scanner.nextDouble();
			sum += x[i] * y[i];
		}
		strX = "x = [";
		strY = "y = [";
		for (int i = 0; i < 5; i++) {
			strX = strX.concat(Double.toString(x[i]));
			strY = strY.concat(Double.toString(y[i]));
			if (i < 4)
			{
				strX = strX.concat(", ");
				strY = strY.concat(", ");
			}
		}
		strX = strX.concat("]");
		strY = strY.concat("]");
		System.out.println(strX);
		System.out.println(strY);
		System.out.println("O produto escalar é " + sum);
		scanner.close();
	}
}

/*
 * 27. Leia 10 números inteiros e armazene em um vetor. Em seguida escreva os elementos
 * que são primos e suas respectivas posições no vetor.
*/

import java.util.Scanner;

public class WhatPrime{
	public static void main(String[] args){
		Scanner	scanner = new Scanner(System.in);
		int		numbers[] = new int[10];

		System.out.println("Digite os valores na seguinte posição:");
		for (int i = 0; i < numbers.length; i++) {
			System.out.print("nb[" + i + "] = ");
			numbers[i] = scanner.nextInt();
		}
		System.out.println("Os primos são:");
		for (int i = 0; i < numbers.length; i++) {
			if (isPrime(numbers[i]))
				System.out.println("numbers[" + i + "] = " + numbers[i]);
		}
		scanner.close();
	}
	private static boolean isPrime(int nb)
	{
		int	aux = (int)Math.sqrt(nb);
		if (nb <= 0 )
			return (false);
		while (nb > 3 && aux > 1) {
			if (nb % aux == 0)
				return (false);
			aux--;
		}
		return (true);
	}
}

/*
 * 29. Faça um programa que receba 6 números inteiros e mostre:
 * • Os números pares digitados;
 * • A soma dos números pares digitados;
 * • Os números  ́ımpares digitados;
 * • A quantidade de números  ́ımpares digitados;
*/

import java.util.Scanner;

public class SixNumbers{
	public static void main(String[] args){
		Scanner	scanner = new Scanner(System.in);
		int[]	numbers = new int[6];
		int		sum, odd;

		System.out.println("Digite os números nas seguintes posições:");
		for (int i = 0; i < numbers.length; i++) {
			System.out.print("numbers[" + i + "] = ");
			numbers[i] = scanner.nextInt();
		}
		sum = 0;
		odd = 0;
		for (int i = 0; i < numbers.length; i++) {
			if (numbers[i] % 2 == 0)
			{
				System.out.println("Pair\t[" + i + "] = " + numbers[i]);
				sum += numbers[i];
			}
			else
			{
				System.out.println("Odd\t[" + i + "] = " + numbers[i]);
				odd += numbers[i];
			}
		}
		System.out.println("Soma dos pares: " + sum);
		System.out.println("Soma dos ímpares: " + odd);
		scanner.close();
	}
}


/*
 * 30. Faça um programa que leia dois vetores de 10 elementos. Crie um vetor que seja a
 * intersecção entre os 2 vetores anteriores, ou seja, que contém apenas os números que
 * estão em ambos os vetores. Não deve conter números repetidos.
*/
import java.util.Random;
import java.util.Arrays;

public class TwoVectors{
	public static void main(String[] args){
		Random	random = new Random();
		int[]	x, y, z;

		x = new int[10];
		y = new int[10];
		z = new int[10];
		Arrays.fill(z, -1);
		for (int i = 0; i < 10; i++) {
			x[i] = random.nextInt(10);
			y[i] = random.nextInt(10);
		}
		int count = -1;
		for (int i = 0; i < x.length; i++) {
			for (int j = 0; j < y.length; j++) {
				if (x[i] == y[j] && !exist(x[i], z))
					z[++count] = x[i];
			}
		}
		System.out.print("x = ");
		putArray(x);
		System.out.print("y = ");
		putArray(y);
		System.out.print("z = ");
		putArray(z);
	}
	private	static boolean exist(int nb, int[] z){
		for (int i = 0; i < z.length; i++) {	
			for (int j = 1; j < z.length; j++) {
				if (z[i] == nb)
					return (true);
			}
		}
		return (false);
	}
	private static void putArray(int[] arr){
		String str;

		str = "[";
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] == -1)
				break;
			str = str.concat(Integer.toString(arr[i]));
			if (i < arr.length - 1 && arr[i + 1] != -1)
				str = str.concat(", ");
		}
		str = str.concat("]");
		System.out.println(str);
	}
}
